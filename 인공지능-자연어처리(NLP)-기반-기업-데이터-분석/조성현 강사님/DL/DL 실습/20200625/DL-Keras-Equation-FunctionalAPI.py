# -*- coding: utf-8 -*-
"""[20200625] DL-equation-KerasFunctionalAPI-Adam.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1iQFbbPFI2c0rZpve8rgdANdO7ZFjBcTG
"""

# module import
from tensorflow.keras.layers import Input, Dense
from tensorflow.keras.models import Model
from tensorflow.keras import optimizers
import numpy as np
import matplotlib.pyplot as plt

# 데이터 집합 생성
x = np.array(np.arange(-5, 5, 0.1))
y = 2*x*x + 3*x + 5
X_data = np.stack([x*x, x]).T # x*x, x 자리에 차례로 들어갈 2차원 array

# 그래프 생성
X_input = Input(batch_shape=(None, X_data.shape[1])) # 몇 개 들어갈지 모름.
y_output = Dense(1)(X_input)
model = Model(X_input, y_output)
model.compile(loss='mse', optimizer=optimizers.Adam(lr=0.05))
print(model.summary())

# 학습
h = model.fit(X_data, y, batch_size=10, epochs=300) # batch_size vs. batch_shape

# 학습 결과
parameters = model.layers[1].get_weights() ##
parameters
print('==== 추정 결과 ====')
print('     w1 = %.2f' % parameters[0][0][0])
print('     w1 = %.2f' % parameters[0][1][0])
print('     b0 = %.2f' % parameters[1][0])

# plot history
plt.plot(h.history['loss'], color='red', linewidth=1)
plt.title('Loss Function')
plt.xlabel('epoch')
plt.ylabel('loss')
plt.show()

model.layers

parameters